(function() {
  var BaseExtension, Redirect,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseExtension = require('./BaseExtension');

  Redirect = (function(superClass) {
    extend(Redirect, superClass);

    function Redirect() {
      return Redirect.__super__.constructor.apply(this, arguments);
    }

    Redirect.prototype.success = function(response) {
      if (typeof response.data.redirect !== 'undefined') {
        return window.location.href = response.data.redirect;
      }
    };

    return Redirect;

  })(BaseExtension);

  module.exports = Redirect;

}).call(this);
