(function() {
  var BaseExtension, Loading,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseExtension = require('./BaseExtension');

  Loading = (function(superClass) {
    extend(Loading, superClass);

    function Loading() {
      return Loading.__super__.constructor.apply(this, arguments);
    }

    Loading.prototype.send = function() {
      return document.body.style.cursor = 'progress';
    };

    Loading.prototype.complete = function() {
      return document.body.style.cursor = 'auto';
    };

    return Loading;

  })(BaseExtension);

  module.exports = Loading;

}).call(this);
